services:
  postgres:
    image: postgres:latest
    container_name: llm_db_cont
    environment:
      POSTGRES_USER: shino
      POSTGRES_PASSWORD: shinopass123
      POSTGRES_DB: llm_test_DB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - llm_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shino"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
    container_name: LLM_Django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./llm_django:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket to allow docker exec
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: llm_db_cont
      POSTGRES_PORT: 5432
      POSTGRES_USER: shino
      POSTGRES_PASSWORD: shinopass123
      POSTGRES_DB: llm_test_DB
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    networks:
      - llm_test

  scrapy:
    build: .
    container_name: scrapy_container
    volumes:
      - ./llm_scrapy:/app
    working_dir: /app
    command: tail -f /dev/null
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: llm_db_cont
      POSTGRES_PORT: 5432
      POSTGRES_USER: shino
      POSTGRES_PASSWORD: shinopass123
      POSTGRES_DB: llm_test_DB
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    networks:
      - llm_test

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_llm
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - llm_test

volumes:
  postgres_data:
  pgadmin_data:

networks:
  llm_test:
    driver: bridge
